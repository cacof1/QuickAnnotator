[common]
patchsize = 256

[flask]
debug = False
port = 5555
clear_stale_jobs_at_start = True
log_level = DEBUG

[cuda]
gpuid = 0

[sqlalchemy]
database_uri = sqlite:///data.db
echo = True
delete_old_jobs_at_start = True

[pooling]
npoolthread = 4


[train_ae]
numepochs = 1000
num_epochs_earlystop = 100
num_min_epochs = 300
numimages = 32
batchsize = 32 
patchsize =  ${common:patchsize}
#-1 implies either 0 for windows, for number of cpus for linux
numworkers = 0

[train_tl]
numepochs = 1000
num_epochs_earlystop = 100
num_min_epochs = 300
batchsize = 8
patchsize =  ${common:patchsize}
edgeweight = 2
#-1 implies compute from images, default is .5
pclass_weight = -1
#-1 implies either 0 for windows, for number of cpus for linux
numworkers = 0
fillbatch = True

[make_patches]
patchsize =  ${common:patchsize}


[make_embed]
patchsize =  ${common:patchsize}
batchsize = 32 

[get_prediction]
#can be larger depending on memory size
batchsize = 8
patchsize =  ${common:patchsize}

[frontend]
# how many seconds to sleep between checking with the server if an object is ready yet:
retry_seconds = 5



[superpixel]
batchsize = 32 
patchsize =  ${common:patchsize}
# desired approximate *width* of _superpixel cell_ in pixels, will be used to determine number of segments
approxcellsize = 20 
compactness = .01 
command_to_use = make_superpixel_dl.py 
